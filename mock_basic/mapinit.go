// Code generated by MockGen. DO NOT EDIT.
// Source: ./basic/mapinit.go

// Package mock_basic is a generated GoMock package.
package mock_basic

import (
	"github.com/golang/mock/gomock"
	"reflect"
)

// MockMapDemo is a mock of MapDemo interface
type MockMapDemo struct {
	ctrl     *gomock.Controller
	recorder *MockMapDemoMockRecorder
}

// MockMapDemoMockRecorder is the mock recorder for MockMapDemo
type MockMapDemoMockRecorder struct {
	mock *MockMapDemo
}

// NewMockMapDemo creates a new mock instance
func NewMockMapDemo(ctrl *gomock.Controller) *MockMapDemo {
	mock := &MockMapDemo{ctrl: ctrl}
	mock.recorder = &MockMapDemoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMapDemo) EXPECT() *MockMapDemoMockRecorder {
	return m.recorder
}

// AddKey mocks base method
func (m *MockMapDemo) AddKey(key string, value interface{}) error {
	ret := m.ctrl.Call(m, "AddKey", key, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddKey indicates an expected call of AddKey
func (mr *MockMapDemoMockRecorder) AddKey(key, value interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddKey", reflect.TypeOf((*MockMapDemo)(nil).AddKey), key, value)
}

// UpdateKey mocks base method
func (m *MockMapDemo) UpdateKey(key string, value interface{}) error {
	ret := m.ctrl.Call(m, "UpdateKey", key, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateKey indicates an expected call of UpdateKey
func (mr *MockMapDemoMockRecorder) UpdateKey(key, value interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateKey", reflect.TypeOf((*MockMapDemo)(nil).UpdateKey), key, value)
}

// DeleteKey mocks base method
func (m *MockMapDemo) DeleteKey(key string) error {
	ret := m.ctrl.Call(m, "DeleteKey", key)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteKey indicates an expected call of DeleteKey
func (mr *MockMapDemoMockRecorder) DeleteKey(key interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteKey", reflect.TypeOf((*MockMapDemo)(nil).DeleteKey), key)
}

// QueryByKey mocks base method
func (m *MockMapDemo) QueryByKey(key string) (interface{}, error) {
	ret := m.ctrl.Call(m, "QueryByKey", key)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryByKey indicates an expected call of QueryByKey
func (mr *MockMapDemoMockRecorder) QueryByKey(key interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryByKey", reflect.TypeOf((*MockMapDemo)(nil).QueryByKey), key)
}
